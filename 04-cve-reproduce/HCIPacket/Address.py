import struct

class Address():

    def __init__(self, addr) -> None:
        if isinstance(addr, bytes):
            # bytes are stored in little-endian
            # e.g., "01:02:03:04:05:06" -> b"\x06\x05\x04\x03\x02\x01"
            assert(len(addr) == 6)
            self._data = addr
        elif isinstance(addr, str):
            addr = addr.replace(":", "-")
            tmp = addr.split("-")
            assert(len(tmp) == 6)
            vals = []
            for t in tmp:
                vals.insert(0, int(t, 16))
            self._data = struct.pack("BBBBBB", *vals)
        else:
            raise ValueError(
                "Address can only be initialized using bytes or str")
    
    @property
    def bytes(self):
        return self._data
